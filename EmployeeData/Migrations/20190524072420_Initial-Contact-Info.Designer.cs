// <auto-generated />
using System;
using CompanyData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace CompanyData.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20190524072420_Initial-Contact-Info")]
    partial class InitialContactInfo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("CompanyData.Models.Department", b =>
                {
                    b.Property<long>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("department_id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("created_date");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<int>("Status")
                        .HasColumnName("status");

                    b.HasKey("DepartmentId");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("CompanyData.Models.Employee", b =>
                {
                    b.Property<long>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("employee_id");

                    b.Property<string>("Address")
                        .HasColumnName("address");

                    b.Property<string>("CellPhone")
                        .HasColumnName("cell_phone");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnName("created_date");

                    b.Property<long>("DepartmentId")
                        .HasColumnName("departmentId");

                    b.Property<string>("Email")
                        .HasColumnName("email");

                    b.Property<string>("HomePhone")
                        .HasColumnName("home_phone");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnName("modified_date");

                    b.Property<string>("Name")
                        .HasColumnName("name");

                    b.Property<int>("Status")
                        .HasColumnName("status");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("CompanyData.Models.Employee", b =>
                {
                    b.HasOne("CompanyData.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
